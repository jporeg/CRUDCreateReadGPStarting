{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Node/Express API\n    this.REST_API = 'http://localhost:8000/api';\n    // Http Header\n    this.httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n  }\n  // Get all books\n  GetBooks() {\n    return this.httpClient.get(`${this.REST_API}`);\n  }\n  // Add\n  AddBook(data) {\n    let API_URL = `${this.REST_API}/add-book`;\n    return this.httpClient.post(API_URL, data).pipe(catchError(this.handleError));\n  }\n  // Delete\n  DeleteBook(id) {\n    let API_URL = `${this.REST_API}/delete-book/${id}`;\n    return this.httpClient.delete(API_URL, {\n      headers: this.httpHeaders\n    }).pipe(catchError(this.handleError));\n  }\n  // Error \n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Handle client error\n      errorMessage = error.error.message;\n    } else {\n      // Handle server error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["catchError","throwError","HttpHeaders","CrudService","constructor","httpClient","REST_API","httpHeaders","set","GetBooks","get","AddBook","data","API_URL","post","pipe","handleError","DeleteBook","id","delete","headers","error","errorMessage","ErrorEvent","message","status","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jpore\\Desktop\\CIS360\\WEEK 1\\cloned-CRUDCreateReadGPStarting\\mean-crud-booklist\\src\\app\\service\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Book } from './Book';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n \r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n \r\nexport class CrudService {\r\n \r\n  // Node/Express API\r\n  REST_API: string = 'http://localhost:8000/api';\r\n \r\n  // Http Header\r\n  httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n \r\n  constructor(private httpClient: HttpClient) { }\r\n \r\n  // Get all books\r\n  GetBooks() {\r\n    return this.httpClient.get(`${this.REST_API}`);\r\n  }\r\n \r\n// Add\r\nAddBook(data: Book): Observable<any> {\r\n  let API_URL = `${this.REST_API}/add-book`;\r\n  return this.httpClient.post(API_URL, data)\r\n  .pipe(\r\n  catchError(this.handleError)\r\n  );\r\n  }\r\n\r\n  // Delete\r\n DeleteBook(id: any): Observable<any> {\r\n  let API_URL = `${this.REST_API}/delete-book/${id}`;\r\n  return this.httpClient.delete(API_URL, { headers: this.httpHeaders })\r\n  .pipe(\r\n  catchError(this.handleError)\r\n  );\r\n  }\r\n\r\n  // Error \r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Handle client error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Handle server error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,UAAU,QAAa,gBAAgB;AAChD,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAAqBC,WAAW,QAA2B,sBAAsB;;;AAMjF,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAN9B;IACA,KAAAC,QAAQ,GAAW,2BAA2B;IAE9C;IACA,KAAAC,WAAW,GAAG,IAAIL,WAAW,EAAE,CAACM,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEzB;EAE9C;EACAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACJ,UAAU,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,QAAQ,EAAE,CAAC;EAChD;EAEF;EACAK,OAAOA,CAACC,IAAU;IAChB,IAAIC,OAAO,GAAG,GAAG,IAAI,CAACP,QAAQ,WAAW;IACzC,OAAO,IAAI,CAACD,UAAU,CAACS,IAAI,CAACD,OAAO,EAAED,IAAI,CAAC,CACzCG,IAAI,CACLf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC3B;EACD;EAEA;EACDC,UAAUA,CAACC,EAAO;IACjB,IAAIL,OAAO,GAAG,GAAG,IAAI,CAACP,QAAQ,gBAAgBY,EAAE,EAAE;IAClD,OAAO,IAAI,CAACb,UAAU,CAACc,MAAM,CAACN,OAAO,EAAE;MAAEO,OAAO,EAAE,IAAI,CAACb;IAAW,CAAE,CAAC,CACpEQ,IAAI,CACLf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC3B;EACD;EAEA;EACAA,WAAWA,CAACK,KAAwB;IAClC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzEE,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;IACzB,OAAOrB,UAAU,CAACqB,YAAY,CAAC;EACjC;;AA7CWnB,WAAW,C;mBAAXA,WAAW,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX5B,WAAW,C;SAAXA,WAAW;EAAA6B,OAAA,EAAX7B,WAAW,CAAA8B,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}